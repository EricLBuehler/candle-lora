searchState.loadedDescShard("candle_lora_transformers", 0, "The BERT model.\nThe StarCoder model.\nThe BLIP model.\nThe DINOv2 model.\nThe Falcon model.\nThe LLama2 model.\nMistral LLM, https://github.com/mistralai/mistral-src\nMPT model used by replit-code-v1_5-3b …\nResNet implementation.\nThe StableLM model.\nT5 Text Model …\nLayers defined by closures, but not Sync.\nUtilities for creating a VarBuilder from a VarMap loaded …\nTracing layers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBe sure to provide a configuration for each type!\nBe sure to provide a configuration for each type!\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBe sure to provide a configuration for each type!\nBe sure to provide a configuration for each type!\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a Falcon model which will be converted to a LoRA …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBe sure to provide a configuration for each type!\nBe sure to provide a configuration for each type!\nBe sure to provide a configuration for each type!\nBe sure to provide a configuration for each type!\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a Mistral model which will be converted to a LoRA …\nReturns the argument unchanged.\nReturns the argument unchanged.\nBe sure to provide a configuration for each type!\nBe sure to provide a configuration for each type!\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a Llama model which will be converted to a LoRA model.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a ResNet-18 model.\nCreates a ResNet-34 model.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA layer defined by a simple closure.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLoad tensors into a VarBuilder backed by a VarMap using …\nLoad tensors into a VarBuilder backed by a VarMap using …\nLoad tensors into a VarBuilder backed by a VarMap using …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBe sure to provide a configuration for each type!\nBe sure to provide a configuration for each type!\nBe sure to provide a configuration for each type!\nBe sure to provide a configuration for each type!\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")
var searchIndex = JSON.parse('{\
"candle_lora":{"doc":"","t":"NIIIIDDDDDDDDDDIEGDNDDLLLLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKKKLLL","n":["AlreadyMerged","Conv1dLayerLike","Conv2dLayerLike","EmbeddingLayerLike","LinearLayerLike","Lora","LoraConfig","LoraConv1d","LoraConv1dConfig","LoraConv2d","LoraConv2dConfig","LoraEmbedding","LoraEmbeddingConfig","LoraLinear","LoraLinearConfig","Merge","MergeError","MergeErrorOrError","NewLayers","NotMerged","SelectedLayers","SelectedLayersBuilder","add_conv1d_layers","add_conv2d_layers","add_embed_layers","add_linear_layers","bias","bias","bias","bias","bias","bias","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","config","config","config","conv1d","conv2d","convert_model","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","embed","embeddings","embeddings","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","forward","forward","forward","forward_t","forward_t","forward_t","forward_t","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_delta_weight","get_delta_weight","get_delta_weight","get_delta_weight","get_delta_weight","hidden_size","hidden_size","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","linear","merge_weights","merge_weights","merge_weights","merge_weights","merge_weights","new","new","new","new","new","new","new","new","new","new","shape","shape","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmerge_weights","unmerge_weights","unmerge_weights","unmerge_weights","unmerge_weights","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","weight","weight","weight","weight","weight"],"q":[[0,"candle_lora"]],"d":["","Any layer that is conv1d-like.","Any layer that is conv2d-like.","Any layer that is embedding-like.","Any layer that is linear-like.","","","","Configuration for LoraConv1d. Other configurations are …","","Configuration for LoraConv2d. Other configurations are …","","Configuration for LoraEmbedding, with <code>num_embeddings</code> …","","Configuration for LoraLinear","","","","New layers, after conversion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the selected layers into their LoRA counterparts.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the delta weight of the LoRA layer. This is meant to …","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Merge the LoRA weights.","","","","","","","","","","","","","","Create a new LoRA config.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unmerge the LoRA weights.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,4,4,4,4,12,5,8,16,17,18,40,19,4,25,16,7,17,9,20,11,18,13,21,27,40,19,4,25,16,7,17,9,20,11,18,13,21,27,4,16,7,17,9,20,11,18,13,21,16,7,17,9,20,11,18,13,21,5,8,16,17,25,25,40,4,40,19,4,25,16,7,17,9,20,11,18,13,21,27,40,19,4,25,16,7,17,9,20,11,18,13,21,27,40,19,4,25,16,7,17,9,20,11,18,13,21,27,25,10,20,27,27,16,7,17,9,20,11,18,13,21,27,27,16,17,20,18,16,17,20,18,40,19,4,25,16,7,17,9,20,11,18,13,21,27,41,16,17,20,18,10,20,40,19,4,25,16,7,17,9,20,11,18,13,21,27,40,19,4,25,16,7,17,9,20,11,18,13,21,27,25,41,16,17,20,18,4,16,7,17,9,20,11,18,13,21,12,18,16,7,17,9,20,11,18,13,21,27,40,19,4,25,16,7,17,9,20,11,18,13,21,27,40,19,4,25,16,7,17,9,20,11,18,13,21,27,40,19,4,25,16,7,17,9,20,11,18,13,21,27,41,16,17,20,18,40,19,4,25,16,7,17,9,20,11,18,13,21,27,12,5,8,16,17,18],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[4,[[0,[1,2,3]]]],[6,[[0,[1,2,3]],5]],7],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2,3]]]],[6,[[0,[1,2,3]],8]],9],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2,3]]]],[6,[[0,[1,2,3]],10]],11],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2,3]]]],[6,[[0,[1,2,3]],12]],13],[[4,[[0,[1,2,3]]]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[16,[[15,[14]]]],[17,[[15,[14]]]],[18,[[15,[14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[[0,[1,2,3]]]]],[[19,[[0,[1,2,3]]]]]],[16,16],[7,7],[17,17],[9,9],[20,20],[11,11],[18,18],[13,13],[21,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],23],[16,22],[17,23],0,0,[[[19,[[0,[1,2,3]]]],21,24],[[25,[[0,[1,2,3]]]]]],[[],[[4,[[0,[1,2,3]]]]]],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,[[],14],[20,14],[[27,27],28],[[],28],[[16,29],30],[[7,29],30],[[17,29],30],[[9,29],30],[[20,29],30],[[11,29],30],[[18,29],30],[[13,29],30],[[21,29],30],[[27,29],30],[[27,29],30],[[16,14],[[31,[14]]]],[[17,14],[[31,[14]]]],[[20,14],[[31,[14]]]],[[18,14],[[31,[14]]]],[[14,28],[[33,[14,32]]]],[[14,28],[[33,[14,32]]]],[[14,28],[[33,[14,32]]]],[[14,28],[[33,[14,32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[33,[14,34]]]],[16,[[33,[14,34]]]],[17,[[33,[14,34]]]],[20,[[33,[14,34]]]],[18,[[33,[14,34]]]],[[],26],[20,26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[33,[34]]]],[16,[[33,[34]]]],[17,[[33,[34]]]],[20,[[33,[34]]]],[18,[[33,[34]]]],[[],[[4,[[0,[1,2,3]]]]]],[[5,7,21,24,26],[[31,[16]]]],[[26,26,26],7],[[8,9,21,24,26],[[31,[17]]]],[[26,26],9],[[10,11,21,24,26],[[31,[20]]]],[[26,26],11],[[12,13,21,24,26],[[31,[18]]]],[[26,26],13],[[26,35,[15,[36]]],21],[[],37],[18,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],[[33,[34]]]],[16,[[33,[34]]]],[17,[[33,[34]]]],[20,[[33,[34]]]],[18,[[33,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[16,14],[17,14],[18,14]],"c":[],"p":[[8,"Eq"],[8,"PartialEq"],[8,"Hash"],[3,"SelectedLayersBuilder"],[8,"Conv1dLayerLike"],[3,"HashMap"],[3,"LoraConv1dConfig"],[8,"Conv2dLayerLike"],[3,"LoraConv2dConfig"],[8,"EmbeddingLayerLike"],[3,"LoraEmbeddingConfig"],[8,"LinearLayerLike"],[3,"LoraLinearConfig"],[3,"Tensor"],[4,"Option"],[3,"LoraConv1d"],[3,"LoraConv2d"],[3,"LoraLinear"],[3,"SelectedLayers"],[3,"LoraEmbedding"],[3,"LoraConfig"],[3,"Conv1dConfig"],[3,"Conv2dConfig"],[6,"VarBuilder"],[3,"NewLayers"],[15,"usize"],[4,"MergeError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"Result"],[4,"Error"],[4,"Result"],[6,"MergeErrorOrError"],[15,"f64"],[15,"f32"],[3,"Shape"],[3,"String"],[3,"TypeId"],[3,"Lora"],[8,"Merge"]]},\
"candle_lora_macro":{"doc":"","t":"YX","n":["AutoLoraConvert","replace_layer_fields"],"q":[[0,"candle_lora_macro"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"candle_lora_transformers":{"doc":"","t":"AAAAAAAAAAAAAAADDDRDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLMLLLLMLMMMMMLLLLLLLLLLMMLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLMLLLLMLMMMMMMLLLLLLLLLLLLLLLMLLLLLDDDLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMLLLMLLLMMMLLMMMLLLLLLLLLLLMLLLDLLLLLLLLLLLLLLLFLDDMMMLLLLMLLLLLLLLMLLLLLLLLMMLLMLLMLMMMMMMLLLLLLMLMLLDDDDDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLMMMMLLLLLLDDLLLLLLLLLLLLLLLLLLLLLMMLLMLLMLMMMMMMLLLLLLLMMLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLDLLLLLLLLLLLFLLLLLLLLFFFDDDDLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLL","n":["bert","bigcode","blip","blip_text","dinov2","falcon","llama","mistral","mpt","resnet","stable_lm","t5","unsync_func","varbuilder_utils","with_tracing","BertLinear","BertModel","Config","DTYPE","LayerNorm","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","device","drop","drop","drop","drop","eq","fmt","fmt","fmt","forward","forward","forward","from","from","from","from","get_lora_model","get_merged_lora_model","init","init","init","init","into","into","into","into","load","new","new","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Config","GPTBigCode","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","forward","from","from","hidden_size","init","init","into","into","layer_norm_epsilon","load","max_position_embeddings","multi_query","n_inner","num_attention_heads","num_hidden_layers","starcoder","starcoder_1b","starcoder_3b","starcoder_7b","try_from","try_from","try_into","try_into","type_id","type_id","use_cache","vocab_size","vzip","vzip","BlipForConditionalGeneration","Config","VisionConfig","VisionModel","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","forward","forward_t","from","from","from","from","hidden_act","hidden_size","image_captioning_large","image_size","image_text_hidden_size","init","init","init","init","intermediate_size","into","into","into","into","layer_norm_eps","new","num_attention_heads","num_hidden_layers","patch_size","projection_dim","projection_dim","text_config","text_decoder","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vision_config","vision_model","vzip","vzip","vzip","vzip","Config","TextLMHeadModel","TextPooler","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","encoder_hidden_size","fmt","fmt","fmt","forward","forward","forward_t","from","from","from","hidden_act","hidden_size","init","init","init","intermediate_size","into","into","into","is_decoder","layer_norm_eps","max_position_embeddings","new","new","num_attention_heads","num_hidden_layers","projection_dim","reset_kv_cache","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vocab_size","vzip","vzip","vzip","DinoVisionTransformer","borrow","borrow_mut","deref","deref_mut","drop","fmt","forward","forward_t","from","init","into","new","try_from","try_into","type_id","vit_small","vzip","Config","Falcon","alibi","attention_dropout","bias","borrow","borrow","borrow_mut","borrow_mut","bos_token_id","config","default","deref","deref","deref_mut","deref_mut","drop","drop","eos_token_id","falcon7b","fmt","fmt","forward","from","from","get_lora_model","get_merged_lora_model","hidden_dropout","hidden_size","init","init","initializer_range","into","into","layer_norm_epsilon","load","multi_query","n_head_kv","new_decoder_architecture","num_attention_heads","num_hidden_layers","parallel_attn","try_from","try_from","try_into","try_into","type_id","type_id","use_cache","validate","vocab_size","vzip","vzip","Cache","Config","Llama","LlamaConfig","LlamaLinear","MAX_SEQ_LEN","bias","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","config_7b_v1","config_7b_v2","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","fmt","forward","forward","forward_t","from","from","from","from","from","get_lora_model","get_lora_model","get_merged_lora_model","get_merged_lora_model","hidden_size","hidden_size","init","init","init","init","init","intermediate_size","intermediate_size","into","into","into","into","into","into_config","load","new","num_attention_heads","num_attention_heads","num_hidden_layers","num_hidden_layers","num_key_value_heads","num_key_value_heads","rms_norm_eps","rms_norm_eps","rope_theta","rope_theta","shape","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_flash_attn","use_kv_cache","vocab_size","vocab_size","vzip","vzip","vzip","vzip","vzip","weight","Config","Mistral","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","config_7b_v0_1","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","forward","from","from","get_lora_model","get_merged_lora_model","hidden_act","hidden_size","init","init","intermediate_size","into","into","max_position_embeddings","new","num_attention_heads","num_hidden_layers","num_key_value_heads","rms_norm_eps","rope_theta","sliding_window","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","use_flash_attn","vocab_size","vzip","vzip","Config","Model","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","forward","from","from","init","init","into","into","is_causal","new","replit_code_v1_5_3b","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","resnet101","resnet101_no_final_layer","resnet152","resnet152_no_final_layer","resnet18","resnet18_no_final_layer","resnet34","resnet34_no_final_layer","resnet50","resnet50_no_final_layer","Config","Model","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","forward","from","from","head_dim","init","init","into","into","new","num_kv_groups","rotary_ndims","stablelm_3b_4e1t","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Config","T5EncoderModel","T5ForConditionalGeneration","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_kv_cache","clear_kv_cache","clone","clone_into","decode","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","device","device","drop","drop","drop","encode","eos_token_id","eq","fmt","fmt","fmt","forward","forward","from","from","from","init","init","init","into","into","into","load","load","musicgen_small","pad_token_id","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_cache","vzip","vzip","vzip","UnsyncFunc","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","forward","forward_t","from","func","init","into","new","to_owned","try_from","try_into","type_id","vzip","from_mmaped_safetensors","from_npz_tensors","from_pth_tensors","QMatMul","TracedLoraConv2d","TracedLoraEmbedding","TracedLoraLinear","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","conv2d","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","embeddings","fmt","fmt","fmt","fmt","forward","forward","forward","forward","forward_t","forward_t","forward_t","forward_t","from","from","from","from","from_weights","get_lora_model","get_lora_model","get_merged_lora_model","get_merged_lora_model","init","init","init","init","into","into","into","into","linear","linear_no_bias","new","new","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"candle_lora_transformers"],[15,"candle_lora_transformers::bert"],[86,"candle_lora_transformers::bigcode"],[129,"candle_lora_transformers::blip"],[210,"candle_lora_transformers::blip_text"],[273,"candle_lora_transformers::dinov2"],[291,"candle_lora_transformers::falcon"],[344,"candle_lora_transformers::llama"],[448,"candle_lora_transformers::mistral"],[497,"candle_lora_transformers::mpt"],[533,"candle_lora_transformers::resnet"],[543,"candle_lora_transformers::stable_lm"],[581,"candle_lora_transformers::t5"],[643,"candle_lora_transformers::unsync_func"],[664,"candle_lora_transformers::varbuilder_utils"],[667,"candle_lora_transformers::with_tracing"]],"d":["The BERT model.","The StarCoder model.","The BLIP model.","","The DINOv2 model.","The Falcon model.","The LLama2 model.","Mistral LLM, https://github.com/mistralai/mistral-src","MPT model used by replit-code-v1_5-3b …","ResNet implementation.","The StableLM model.","T5 Text Model …","Layers defined by closures, but not Sync.","Utilities for creating a VarBuilder from a VarMap loaded …","Tracing layers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Load a Falcon model which will be converted to a LoRA …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Load a Mistral model which will be converted to a LoRA …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Load a Llama model which will be converted to a LoRA model.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Creates a ResNet-18 model.","","Creates a ResNet-34 model.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A layer defined by a simple closure.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Load tensors into a VarBuilder backed by a VarMap using …","Load tensors into a VarBuilder backed by a VarMap using …","Load tensors into a VarBuilder backed by a VarMap using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,6,9,1,10,6,9,1,1,1,1,10,6,9,1,10,6,9,1,1,10,10,6,9,1,1,6,9,1,10,6,9,10,6,9,1,6,6,10,6,9,1,10,6,9,1,10,6,9,1,10,6,9,1,10,6,9,1,10,6,9,1,10,6,9,1,0,0,22,23,22,23,22,22,23,22,23,22,23,23,22,22,23,23,22,23,22,23,23,22,23,23,23,23,23,23,23,23,23,22,23,22,23,22,23,23,23,22,23,0,0,0,0,24,25,26,27,24,25,26,27,24,25,24,25,24,25,26,27,24,25,26,27,24,25,26,27,24,25,26,27,26,26,24,25,26,27,24,24,25,24,25,24,25,26,27,24,24,25,26,27,24,27,24,24,24,24,25,25,27,24,25,24,25,26,27,24,25,26,27,24,25,26,27,25,27,24,25,26,27,0,0,0,30,31,29,30,31,29,30,30,30,31,29,30,31,29,30,30,31,29,30,30,31,29,31,29,31,30,31,29,30,30,30,31,29,30,30,31,29,30,30,30,31,29,30,30,30,29,30,30,31,29,30,31,29,30,31,29,30,30,31,29,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,32,0,0,34,34,34,34,33,34,33,34,33,34,34,33,34,33,34,33,34,34,34,33,33,34,33,33,33,34,34,34,33,34,34,33,34,33,34,34,34,34,34,34,34,33,34,33,34,33,34,34,34,34,33,0,0,0,0,0,0,35,37,38,35,36,39,37,38,35,36,39,36,36,37,37,37,38,35,36,39,37,38,35,36,39,38,37,38,35,36,39,35,35,39,35,37,38,35,36,39,35,39,35,39,37,38,37,38,35,36,39,37,38,37,38,35,36,39,38,39,36,37,38,37,38,37,38,37,38,37,38,35,36,37,38,35,36,39,37,38,35,36,39,37,38,35,36,39,37,36,37,38,37,38,35,36,39,35,0,0,43,44,43,44,43,43,43,43,44,43,44,43,44,43,43,44,44,43,44,44,44,43,43,43,44,43,43,44,43,44,43,43,43,43,43,43,43,43,44,43,44,43,44,43,43,43,44,0,0,45,46,45,46,45,45,45,46,45,46,45,46,45,45,46,46,45,46,45,46,45,46,45,46,45,45,45,46,45,46,45,46,45,46,0,0,0,0,0,0,0,0,0,0,0,0,48,49,48,49,48,48,48,49,48,49,48,49,48,48,49,49,48,49,48,48,49,48,49,49,48,48,48,48,48,49,48,49,48,49,48,49,0,0,0,52,50,51,52,50,51,50,51,52,52,51,52,52,50,51,52,50,51,52,50,51,52,50,51,51,52,52,52,50,51,50,51,52,50,51,52,50,51,52,50,51,50,51,52,52,52,52,50,51,52,50,51,52,50,51,52,52,50,51,0,47,47,47,47,47,47,47,47,47,47,47,0,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,63,64,60,61,63,64,60,61,60,61,60,61,0,63,64,60,61,63,64,60,61,63,64,60,61,63,63,64,60,61,63,64,60,61,63,64,60,61,63,64,60,61,64,63,64,63,64,63,64,60,61,63,64,60,61,0,0,63,61,60,61,63,64,60,61,63,64,60,61,63,64,60,61,63,64,60,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[3,[[4,[1]]]],0,[2],[2],[2],[2],[[1,1],5],[[6,7],8],[[9,7],8],[[1,7],8],[[10,11,11],[[12,[11]]]],[[6,11],[[12,[11]]]],[[9,11],[[12,[11]]]],[[]],[[]],[[]],[[]],[[6,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[6,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[14,1,5,13],[[12,[10]]]],[[14,11,[16,[11]],5,13],6],[[11,11,20],9],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[22,23],[2],[2],[2],[2],[2],[2],[[23,7],8],[[22,11,2],[[12,[11]]]],[[]],[[]],0,[[],2],[[],2],[[]],[[]],0,[[14,23,5,13],[[12,[22]]]],0,0,0,0,0,[[],23],[[],23],[[],23],[[],23],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],0,0,[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,24],[25,25],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[24,7],8],[[25,7],8],[[26,7],8],[[27,7],8],[[26,11],[[12,[11]]]],[[11,5],[[4,[11,28]]]],[[]],[[]],[[]],[[]],0,0,[[],25],0,0,[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],0,[[25,14,5,13],[[12,[27]]]],0,0,0,0,0,0,[27,29],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],[[],21],[[],21],0,[27,26],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[30,30],[[]],[2],[2],[2],[2],[2],[2],[3,[[4,[30]]]],[2],[2],[2],0,[[30,7],8],[[31,7],8],[[29,7],8],[[31,11],[[12,[11]]]],[[29,11,11],[[12,[11]]]],[[11,5],[[4,[11,28]]]],[[]],[[]],[[]],0,0,[[],2],[[],2],[[],2],0,[[]],[[]],[[]],0,0,0,[[30,14,5,13],[[12,[31]]]],[[30,14,5,13],[[12,[29]]]],0,0,0,[29],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],0,[[]],[[]],[2],[2],[2],[[32,7],8],[[32,11],[[12,[11]]]],[[11,5],[[4,[11,28]]]],[[]],[[],2],[[]],[[14,2,2,2,5,13],[[12,[32]]]],[[],4],[[],4],[[],21],[[14,5,13],[[12,[32]]]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],0,[33,34],[[],34],[2],[2],[2],[2],[2],[2],0,[[],34],[[34,7],8],[[33,7],8],[[33,11],[[12,[11]]]],[[]],[[]],[[33,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[33,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],0,0,[[],2],[[],2],0,[[]],[[]],0,[[14,34,5,13,15,19],[[12,[33]]]],0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],0,[34,12],0,[[]],[[]],0,0,0,0,0,0,[35,[[16,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[[]],[5,37],[5,37],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[3,[[4,[38]]]],[2],[2],[2],[2],[2],[[35,7],8],[[35,11],[[12,[11]]]],[[39,11,2],[[12,[11]]]],[[11,5],[[4,[11,28]]]],[[]],[[]],[[]],[[]],[[]],[[35,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[39,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[35,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[39,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[]],[[38,5],37],[[14,36,37,5,13,15,19],[[12,[39]]]],[[5,40,37,41],[[12,[36]]]],0,0,0,0,0,0,0,0,0,0,[35,42],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[35,11],0,0,[[]],[[]],[[]],[[]],[43,43],[[]],[5,43],[2],[2],[2],[2],[2],[2],[[43,43],5],[[43,7],8],[[44,7],8],[[44,11,2],[[12,[11]]]],[[]],[[]],[[44,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[44,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],0,0,[[],2],[[],2],0,[[]],[[]],0,[[43,14,5,13],[[12,[44]]]],0,0,0,0,0,0,[[]],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[45,45],[[]],[2],[2],[2],[2],[2],[2],[[45,45],5],[[45,7],8],[[46,7],8],[[46,11],[[12,[11]]]],[[]],[[]],[[],2],[[],2],[[]],[[]],[45,5],[[45,14,5,13],[[12,[46]]]],[[],45],[[]],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],[[]],[[]],[[2,14,5,13],[[12,[47]]]],[[14,5,13],[[12,[47]]]],[[2,14,5,13],[[12,[47]]]],[[14,5,13],[[12,[47]]]],[[2,14,5,13],[[12,[47]]]],[[14,5,13],[[12,[47]]]],[[2,14,5,13],[[12,[47]]]],[[14,5,13],[[12,[47]]]],[[2,14,5,13],[[12,[47]]]],[[14,5,13],[[12,[47]]]],0,0,[[]],[[]],[[]],[[]],[48,48],[[]],[2],[2],[2],[2],[2],[2],[[48,48],5],[[48,7],8],[[49,7],8],[[49,11,2],[[12,[11]]]],[[]],[[]],[48,2],[[],2],[[],2],[[]],[[]],[[48,14,5,13],[[12,[49]]]],[48,2],[48,2],[5,48],[[]],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[50],[51],[52,52],[[]],[[51,11,11],[[12,[11]]]],[[],52],[2],[2],[2],[2],[2],[2],[3,[[4,[52]]]],[50,41],[51,41],[2],[2],[2],[[51,11],[[12,[11]]]],0,[[52,52],5],[[52,7],8],[[50,7],8],[[51,7],8],[[50,11],[[12,[11]]]],[[51,11,11],[[12,[11]]]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[14,52,5,13],[[12,[50]]]],[[14,52,5,13],[[12,[51]]]],[[],52],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],0,[[]],[[]],[47,47],[[]],[2],[2],[2],[[47,7],8],[[47,11],[[12,[11]]]],[[11,5],[[4,[11,28]]]],[[]],[53,47],[[],2],[[]],[53,47],[[]],[[],4],[[],4],[[],21],[[]],[[[56,[[55,[54]]]],40,41],[[4,[[59,[[58,[57]]]],28]]]],[[[55,[54]],40,41],[[4,[[59,[[58,[57]]]],28]]]],[[[55,[54]],40,41],[[4,[[59,[[58,[57]]]],28]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,60],[61,61],[[]],[[]],[[2,2,2,62,14],[[12,[60]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[63,11],[[63,7],8],[[64,7],8],[[60,7],8],[[61,7],8],[[63,11],[[12,[11]]]],[[64,11],[[12,[11]]]],[[60,11],[[12,[11]]]],[[61,11],[[12,[11]]]],[[11,5],[[4,[11,28]]]],[[11,5],[[4,[11,28]]]],[[11,5],[[4,[11,28]]]],[[11,5],[[4,[11,28]]]],[[]],[[]],[[]],[[]],[[11,[16,[11]],14,5,13],64],[[63,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[64,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[63,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[64,13,14,[16,[15]],[16,[17]],[16,[18]],[16,[19]]]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[2,2,14,5,13],[[12,[64]]]],[[2,2,14,5,13],[[12,[64]]]],[[2,2,14,5,13],[[12,[63]]]],[[2,2,65],[[12,[61]]]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Config"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"BertLinear"],[3,"Formatter"],[6,"Result"],[3,"LayerNorm"],[3,"BertModel"],[3,"Tensor"],[6,"Result"],[3,"LoraConfig"],[6,"VarBuilder"],[3,"LoraLinearConfig"],[4,"Option"],[3,"LoraConv1dConfig"],[3,"LoraConv2dConfig"],[3,"LoraEmbeddingConfig"],[15,"f64"],[3,"TypeId"],[3,"GPTBigCode"],[3,"Config"],[3,"VisionConfig"],[3,"Config"],[3,"VisionModel"],[3,"BlipForConditionalGeneration"],[4,"Error"],[3,"TextLMHeadModel"],[3,"Config"],[3,"TextPooler"],[3,"DinoVisionTransformer"],[3,"Falcon"],[3,"Config"],[3,"LlamaLinear"],[3,"Cache"],[3,"Config"],[3,"LlamaConfig"],[3,"Llama"],[4,"DType"],[4,"Device"],[3,"Shape"],[3,"Config"],[3,"Mistral"],[3,"Config"],[3,"Model"],[3,"UnsyncFunc"],[3,"Config"],[3,"Model"],[3,"T5EncoderModel"],[3,"T5ForConditionalGeneration"],[3,"Config"],[8,"Fn"],[3,"Path"],[8,"AsRef"],[15,"slice"],[8,"SimpleBackend"],[3,"Box"],[3,"VarBuilderArgs"],[3,"TracedLoraConv2d"],[3,"QMatMul"],[3,"Conv2dConfig"],[3,"TracedLoraEmbedding"],[3,"TracedLoraLinear"],[3,"VarBuilder"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};

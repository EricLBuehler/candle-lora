var searchIndex = new Map(JSON.parse('[\
["candle_lora",{"doc":"","t":"PKKKPKFFFFFFFFFFKGIFPPFFNNNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMMMNNN","n":["AlreadyMerged","Conv1dLayerLike","Conv2dLayerLike","EmbeddingLayerLike","Left","LinearLayerLike","Lora","LoraConfig","LoraConv1d","LoraConv1dConfig","LoraConv2d","LoraConv2dConfig","LoraEmbedding","LoraEmbeddingConfig","LoraLinear","LoraLinearConfig","Merge","MergeError","MergeErrorOrError","NewLayers","NotMerged","Right","SelectedLayers","SelectedLayersBuilder","add_conv1d_layers","add_conv2d_layers","add_embed_layers","add_linear_layers","bias","bias","bias","bias","bias","bias","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","config","config","config","conv1d","conv2d","convert_model","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","embed","embeddings","embeddings","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","forward","forward","forward","forward_t","forward_t","forward_t","forward_t","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_delta_weight","get_delta_weight","get_delta_weight","get_delta_weight","get_delta_weight","hidden_size","hidden_size","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","linear","merge_weights","merge_weights","merge_weights","merge_weights","merge_weights","new","new","new","new","new","new","new","new","new","new","shape","shape","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmerge_weights","unmerge_weights","unmerge_weights","unmerge_weights","unmerge_weights","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","weight","weight","weight","weight","weight"],"q":[[0,"candle_lora"],[298,"std::collections::hash::map"],[299,"core::cmp"],[300,"core::cmp"],[301,"candle_core::tensor"],[302,"core::option"],[303,"candle_nn::conv"],[304,"candle_nn::conv"],[305,"core::fmt"],[306,"core::fmt"],[307,"candle_core::error"],[308,"candle_core::shape"],[309,"alloc::string"],[310,"core::any"]],"d":["","Any layer that is conv1d-like.","Any layer that is conv2d-like.","Any layer that is embedding-like.","A value of type <code>L</code>.","Any layer that is linear-like.","","","","Configuration for LoraConv1d. Other configurations are …","","Configuration for LoraConv2d. Other configurations are …","","Configuration for LoraEmbedding, with <code>num_embeddings</code> …","","Configuration for LoraLinear","","","","New layers, after conversion","","A value of type <code>R</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the selected layers into their LoRA counterparts.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the delta weight of the LoRA layer. This is meant to …","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Merge the LoRA weights.","","","","","","","","","","","","","","Create a new LoRA config.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unmerge the LoRA weights.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[28,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,36,0,0,1,1,1,1,12,2,8,16,17,18,42,19,1,26,16,4,17,9,20,11,18,13,21,28,42,19,1,26,16,4,17,9,20,11,18,13,21,28,1,16,4,17,9,20,11,18,13,21,16,4,17,9,20,11,18,13,21,2,8,16,17,26,26,42,1,42,19,1,26,16,4,17,9,20,11,18,13,21,28,42,19,1,26,16,4,17,9,20,11,18,13,21,28,42,19,1,26,16,4,17,9,20,11,18,13,21,28,26,10,20,28,16,4,17,9,20,11,18,13,21,28,28,16,17,20,18,16,17,20,18,42,19,1,26,16,4,17,9,20,11,18,13,21,28,35,16,17,20,18,10,20,42,19,1,26,16,4,17,9,20,11,18,13,21,28,42,19,1,26,16,4,17,9,20,11,18,13,21,28,26,35,16,17,20,18,1,16,4,17,9,20,11,18,13,21,12,18,16,4,17,9,20,11,18,13,21,28,42,19,1,26,16,4,17,9,20,11,18,13,21,28,42,19,1,26,16,4,17,9,20,11,18,13,21,28,42,19,1,26,16,4,17,9,20,11,18,13,21,28,35,16,17,20,18,42,19,1,26,16,4,17,9,20,11,18,13,21,28,12,2,8,16,17,18],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],[3,[-1,2]],4],[[1,[-1]]],[5,6,7]],[[[1,[-1]],[3,[-1,8]],9],[[1,[-1]]],[5,6,7]],[[[1,[-1]],[3,[-1,10]],11],[[1,[-1]]],[5,6,7]],[[[1,[-1]],[3,[-1,12]],13],[[1,[-1]]],[5,6,7]],[12,[[15,[14]]]],[2,[[15,[14]]]],[8,[[15,[14]]]],[16,[[15,[14]]]],[17,[[15,[14]]]],[18,[[15,[14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[19,[-1]]],[5,6,7]],[16,16],[4,4],[17,17],[9,9],[20,20],[11,11],[18,18],[13,13],[21,21],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[2,23],[8,24],[16,23],[17,24],0,0,[[[19,[-1]],21,25],[[26,[-1]]],[5,6,7]],[[],[[1,[-1]]],[5,6,7]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,22],[27,22],[27,22],[27,22],[27,22],[27,22],[27,22],[27,22],[27,22],[27,22],[27,22],[27,22],[27,22],[27,22],0,[10,14],[20,14],[[28,28],29],[[16,30],31],[[4,30],31],[[17,30],31],[[9,30],31],[[20,30],31],[[11,30],31],[[18,30],31],[[13,30],31],[[21,30],31],[[28,30],31],[[28,30],31],[[16,14],[[32,[14]]]],[[17,14],[[32,[14]]]],[[20,14],[[32,[14]]]],[[18,14],[[32,[14]]]],[[-1,14,29],[[34,[14,33]]],[]],[[-1,14,29],[[34,[14,33]]],[]],[[-1,14,29],[[34,[14,33]]],[]],[[-1,14,29],[[34,[14,33]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[35,[[34,[14,36]]]],[16,[[34,[14,36]]]],[17,[[34,[14,36]]]],[20,[[34,[14,36]]]],[18,[[34,[14,36]]]],[10,27],[20,27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[35,[[34,[22,36]]]],[16,[[34,[22,36]]]],[17,[[34,[22,36]]]],[20,[[34,[22,36]]]],[18,[[34,[22,36]]]],[[],[[1,[-1]]],[5,6,7]],[[2,4,21,25,27],[[32,[16]]]],[[27,27,27],4],[[8,9,21,25,27],[[32,[17]]]],[[27,27],9],[[10,11,21,25,27],[[32,[20]]]],[[27,27],11],[[12,13,21,25,27],[[32,[18]]]],[[27,27],13],[[27,37,[15,[38]]],21],[12,39],[18,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,40,[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[35,[[34,[22,36]]]],[16,[[34,[22,36]]]],[17,[[34,[22,36]]]],[20,[[34,[22,36]]]],[18,[[34,[22,36]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,14],[2,14],[8,14],[16,14],[17,14],[18,14]],"c":[],"p":[[5,"SelectedLayersBuilder",0],[10,"Conv1dLayerLike",0],[5,"HashMap",298],[5,"LoraConv1dConfig",0],[10,"Eq",299],[10,"PartialEq",299],[10,"Hash",300],[10,"Conv2dLayerLike",0],[5,"LoraConv2dConfig",0],[10,"EmbeddingLayerLike",0],[5,"LoraEmbeddingConfig",0],[10,"LinearLayerLike",0],[5,"LoraLinearConfig",0],[5,"Tensor",301],[6,"Option",302],[5,"LoraConv1d",0],[5,"LoraConv2d",0],[5,"LoraLinear",0],[5,"SelectedLayers",0],[5,"LoraEmbedding",0],[5,"LoraConfig",0],[1,"tuple"],[5,"Conv1dConfig",303],[5,"Conv2dConfig",303],[8,"VarBuilder",304],[5,"NewLayers",0],[1,"usize"],[6,"MergeError",0],[1,"bool"],[5,"Formatter",305],[8,"Result",305],[8,"Result",306],[6,"Error",306],[6,"Result",307],[10,"Merge",0],[8,"MergeErrorOrError",0],[1,"f64"],[1,"f32"],[5,"Shape",308],[5,"String",309],[5,"TypeId",310],[5,"Lora",0]],"b":[[144,"impl-Debug-for-MergeError"],[145,"impl-Display-for-MergeError"]]}],\
["candle_lora_macro",{"doc":"","t":"YX","n":["AutoLoraConvert","replace_layer_fields"],"q":[[0,"candle_lora_macro"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[],"b":[]}],\
["candle_lora_transformers",{"doc":"","t":"CCCCCCCCCCCCCCCFFFSFNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNONNNNONOOOOONNNNNNNNNNOONNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOONNNNONNNNONOOOOOONNNNNNNNNNNNNNNONNNNNFFFNNNNNNNNNNNNNNNNNNONNNNNNNNNOONNNONNNOOONNOOONNNNNNNNNNNONNNFNNNNNNNNNNNNNNNHNFFOOONNNNONNNNNNNNONNNNNNNNOONNONNONOOOOOONNNNNNONONNFFFFFSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNOONNNNNNNNOOOOOOOOOONNNNNNNNNNNNNNNNNOOOONNNNNNFFNNNNNNNNNNNNNNNNNNNNNOONNONNONOOOOOONNNNNNNOONNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNONNNFNNNNNNNNNNNHNNNNNNNNHHHFFFFNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNN","n":["bert","bigcode","blip","blip_text","dinov2","falcon","llama","mistral","mpt","resnet","stable_lm","t5","unsync_func","varbuilder_utils","with_tracing","BertLinear","BertModel","Config","DTYPE","LayerNorm","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","device","drop","drop","drop","drop","eq","fmt","fmt","fmt","forward","forward","forward","from","from","from","from","get_lora_model","get_merged_lora_model","init","init","init","init","into","into","into","into","load","new","new","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Config","GPTBigCode","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","forward","from","from","hidden_size","init","init","into","into","layer_norm_epsilon","load","max_position_embeddings","multi_query","n_inner","num_attention_heads","num_hidden_layers","starcoder","starcoder_1b","starcoder_3b","starcoder_7b","try_from","try_from","try_into","try_into","type_id","type_id","use_cache","vocab_size","vzip","vzip","BlipForConditionalGeneration","Config","VisionConfig","VisionModel","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","forward","forward_t","from","from","from","from","hidden_act","hidden_size","image_captioning_large","image_size","image_text_hidden_size","init","init","init","init","intermediate_size","into","into","into","into","layer_norm_eps","new","num_attention_heads","num_hidden_layers","patch_size","projection_dim","projection_dim","text_config","text_decoder","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vision_config","vision_model","vzip","vzip","vzip","vzip","Config","TextLMHeadModel","TextPooler","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","encoder_hidden_size","fmt","fmt","fmt","forward","forward","forward_t","from","from","from","hidden_act","hidden_size","init","init","init","intermediate_size","into","into","into","is_decoder","layer_norm_eps","max_position_embeddings","new","new","num_attention_heads","num_hidden_layers","projection_dim","reset_kv_cache","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vocab_size","vzip","vzip","vzip","DinoVisionTransformer","borrow","borrow_mut","deref","deref_mut","drop","fmt","forward","forward_t","from","init","into","new","try_from","try_into","type_id","vit_small","vzip","Config","Falcon","alibi","attention_dropout","bias","borrow","borrow","borrow_mut","borrow_mut","bos_token_id","config","default","deref","deref","deref_mut","deref_mut","drop","drop","eos_token_id","falcon7b","fmt","fmt","forward","from","from","get_lora_model","get_merged_lora_model","hidden_dropout","hidden_size","init","init","initializer_range","into","into","layer_norm_epsilon","load","multi_query","n_head_kv","new_decoder_architecture","num_attention_heads","num_hidden_layers","parallel_attn","try_from","try_from","try_into","try_into","type_id","type_id","use_cache","validate","vocab_size","vzip","vzip","Cache","Config","Llama","LlamaConfig","LlamaLinear","MAX_SEQ_LEN","bias","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","config_7b_v1","config_7b_v2","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","fmt","forward","forward","forward_t","from","from","from","from","from","get_lora_model","get_lora_model","get_merged_lora_model","get_merged_lora_model","hidden_size","hidden_size","init","init","init","init","init","intermediate_size","intermediate_size","into","into","into","into","into","into_config","load","new","num_attention_heads","num_attention_heads","num_hidden_layers","num_hidden_layers","num_key_value_heads","num_key_value_heads","rms_norm_eps","rms_norm_eps","rope_theta","rope_theta","shape","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_flash_attn","use_kv_cache","vocab_size","vocab_size","vzip","vzip","vzip","vzip","vzip","weight","Config","Mistral","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","config_7b_v0_1","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","forward","from","from","get_lora_model","get_merged_lora_model","hidden_act","hidden_size","init","init","intermediate_size","into","into","max_position_embeddings","new","num_attention_heads","num_hidden_layers","num_key_value_heads","rms_norm_eps","rope_theta","sliding_window","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","use_flash_attn","vocab_size","vzip","vzip","Config","Model","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","forward","from","from","init","init","into","into","is_causal","new","replit_code_v1_5_3b","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","resnet101","resnet101_no_final_layer","resnet152","resnet152_no_final_layer","resnet18","resnet18_no_final_layer","resnet34","resnet34_no_final_layer","resnet50","resnet50_no_final_layer","Config","Model","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","forward","from","from","head_dim","init","init","into","into","new","num_kv_groups","rotary_ndims","stablelm_3b_4e1t","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Config","T5EncoderModel","T5ForConditionalGeneration","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_kv_cache","clear_kv_cache","clone","clone_into","decode","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","device","device","drop","drop","drop","encode","eos_token_id","eq","fmt","fmt","fmt","forward","forward","from","from","from","init","init","init","into","into","into","load","load","musicgen_small","pad_token_id","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_cache","vzip","vzip","vzip","UnsyncFunc","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","forward","forward_t","from","func","init","into","new","to_owned","try_from","try_into","type_id","vzip","from_mmaped_safetensors","from_npz_tensors","from_pth_tensors","QMatMul","TracedLoraConv2d","TracedLoraEmbedding","TracedLoraLinear","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","conv2d","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","embeddings","fmt","fmt","fmt","fmt","forward","forward","forward","forward","forward_t","forward_t","forward_t","forward_t","from","from","from","from","from_weights","get_lora_model","get_lora_model","get_merged_lora_model","get_merged_lora_model","init","init","init","init","into","into","into","into","linear","linear_no_bias","new","new","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"candle_lora_transformers"],[15,"candle_lora_transformers::bert"],[86,"candle_lora_transformers::bigcode"],[129,"candle_lora_transformers::blip"],[210,"candle_lora_transformers::blip_text"],[273,"candle_lora_transformers::dinov2"],[291,"candle_lora_transformers::falcon"],[344,"candle_lora_transformers::llama"],[448,"candle_lora_transformers::mistral"],[497,"candle_lora_transformers::mpt"],[533,"candle_lora_transformers::resnet"],[543,"candle_lora_transformers::stable_lm"],[581,"candle_lora_transformers::t5"],[643,"candle_lora_transformers::unsync_func"],[664,"candle_lora_transformers::varbuilder_utils"],[667,"candle_lora_transformers::with_tracing"],[748,"core::result"],[749,"serde::de"],[750,"core::fmt"],[751,"core::fmt"],[752,"candle_core::error"],[753,"candle_lora"],[754,"candle_nn::var_builder"],[755,"candle_lora::loralinear"],[756,"core::option"],[757,"candle_lora::loraconv1d"],[758,"candle_lora::loraconv2d"],[759,"candle_lora::loraembed"],[760,"core::any"],[761,"candle_core::error"],[762,"candle_core::device"],[763,"candle_core::shape"],[764,"core::ops::function"],[765,"candle_nn::var_builder"],[766,"candle_nn::var_builder"],[767,"core::convert"],[768,"candle_nn::conv"],[769,"candle_transformers::quantized_var_builder"]],"d":["The BERT model.","The StarCoder model.","The BLIP model.","","The DINOv2 model.","The Falcon model.","The LLama2 model.","Mistral LLM, https://github.com/mistralai/mistral-src","MPT model used by replit-code-v1_5-3b …","ResNet implementation.","The StableLM model.","T5 Text Model …","Layers defined by closures, but not Sync.","Utilities for creating a VarBuilder from a VarMap loaded …","Tracing layers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Load a Falcon model which will be converted to a LoRA …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Load a Mistral model which will be converted to a LoRA …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Load a Llama model which will be converted to a LoRA model.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Creates a ResNet-18 model.","","Creates a ResNet-34 model.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A layer defined by a simple closure.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Load tensors into a VarBuilder backed by a VarMap using …","Load tensors into a VarBuilder backed by a VarMap using …","Load tensors into a VarBuilder backed by a VarMap using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","Be sure to provide a configuration for each type!","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,7,10,1,11,7,10,1,1,1,1,11,7,10,1,11,7,10,1,1,11,11,7,10,1,1,7,10,1,11,7,10,11,7,10,1,7,7,11,7,10,1,11,7,10,1,11,7,10,1,11,7,10,1,11,7,10,1,11,7,10,1,11,7,10,1,0,0,23,24,23,24,23,23,24,23,24,23,24,24,23,23,24,24,23,24,23,24,24,23,24,24,24,24,24,24,24,24,24,23,24,23,24,23,24,24,24,23,24,0,0,0,0,25,26,27,28,25,26,27,28,25,26,25,26,25,26,27,28,25,26,27,28,25,26,27,28,25,26,27,28,27,27,25,26,27,28,25,25,26,25,26,25,26,27,28,25,25,26,27,28,25,28,25,25,25,25,26,26,28,25,26,25,26,27,28,25,26,27,28,25,26,27,28,26,28,25,26,27,28,0,0,0,31,32,30,31,32,30,31,31,31,32,30,31,32,30,31,31,32,30,31,31,32,30,32,30,32,31,32,30,31,31,31,32,30,31,31,32,30,31,31,31,32,30,31,31,31,30,31,31,32,30,31,32,30,31,32,30,31,31,32,30,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,33,0,0,35,35,35,35,34,35,34,35,34,35,35,34,35,34,35,34,35,35,35,34,34,35,34,34,34,35,35,35,34,35,35,34,35,34,35,35,35,35,35,35,35,34,35,34,35,34,35,35,35,35,34,0,0,0,0,0,0,36,38,39,36,37,40,38,39,36,37,40,37,37,38,38,38,39,36,37,40,38,39,36,37,40,39,38,39,36,37,40,36,36,40,36,38,39,36,37,40,36,40,36,40,38,39,38,39,36,37,40,38,39,38,39,36,37,40,39,40,37,38,39,38,39,38,39,38,39,38,39,36,37,38,39,36,37,40,38,39,36,37,40,38,39,36,37,40,38,37,38,39,38,39,36,37,40,36,0,0,44,45,44,45,44,44,44,44,45,44,45,44,45,44,44,45,45,44,45,45,45,44,44,44,45,44,44,45,44,45,44,44,44,44,44,44,44,44,45,44,45,44,45,44,44,44,45,0,0,46,47,46,47,46,46,46,47,46,47,46,47,46,46,47,47,46,47,46,47,46,47,46,47,46,46,46,47,46,47,46,47,46,47,0,0,0,0,0,0,0,0,0,0,0,0,49,50,49,50,49,49,49,50,49,50,49,50,49,49,50,50,49,50,49,49,50,49,50,50,49,49,49,49,49,50,49,50,49,50,49,50,0,0,0,53,51,52,53,51,52,51,52,53,53,52,53,53,51,52,53,51,52,53,51,52,53,51,52,52,53,53,53,51,52,51,52,53,51,52,53,51,52,53,51,52,51,52,53,53,53,53,51,52,53,51,52,53,51,52,53,53,51,52,0,48,48,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,65,66,62,63,65,66,62,63,62,63,62,63,0,65,66,62,63,65,66,62,63,65,66,62,63,65,65,66,62,63,65,66,62,63,65,66,62,63,65,66,62,63,66,65,66,65,66,65,66,62,63,65,66,62,63,0,0,65,63,62,63,65,66,62,63,65,66,62,63,65,66,62,63,65,66,62,63],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[],1],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[4,[1]]],5],0,[3,2],[3,2],[3,2],[3,2],[[1,1],6],[[7,8],9],[[10,8],9],[[1,8],9],[[11,12,12],[[13,[12]]]],[[7,12],[[13,[12]]]],[[10,12],[[13,[12]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[7,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[7,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[15,1,6,14],[[13,[11]]]],[[15,12,[17,[12]],6,14],7],[[12,12,21],10],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,24],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,2],[3,2],[[24,8],9],[[23,12,3],[[13,[12]]]],[-1,-1,[]],[-1,-1,[]],0,[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],0,[[15,24,6,14],[[13,[23]]]],0,0,0,0,0,[[],24],[[],24],[[],24],[[],24],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[26,26],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,2],[3,2],[3,2],[3,2],[[25,8],9],[[26,8],9],[[27,8],9],[[28,8],9],[[27,12],[[13,[12]]]],[[-1,12,6],[[4,[12,29]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],26],0,0,[[],3],[[],3],[[],3],[[],3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[26,15,6,14],[[13,[28]]]],0,0,0,0,0,0,[28,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,[28,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[[-1,-2],2,[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[4,[31]]],5],[3,2],[3,2],[3,2],0,[[31,8],9],[[32,8],9],[[30,8],9],[[32,12],[[13,[12]]]],[[30,12,12],[[13,[12]]]],[[-1,12,6],[[4,[12,29]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],3],[[],3],[[],3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[31,15,6,14],[[13,[32]]]],[[31,15,6,14],[[13,[30]]]],0,0,0,[30,2],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[3,-1,[]],[3,-1,[]],[3,2],[[33,8],9],[[33,12],[[13,[12]]]],[[-1,12,6],[[4,[12,29]]],[]],[-1,-1,[]],[[],3],[-1,-2,[],[]],[[15,3,3,3,6,14],[[13,[33]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[[15,6,14],[[13,[33]]]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[34,35],[[],35],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,2],[3,2],0,[[],35],[[35,8],9],[[34,8],9],[[34,12],[[13,[12]]]],[-1,-1,[]],[-1,-1,[]],[[34,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[34,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],0,0,[[],3],[[],3],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[15,35,6,14,16,20],[[13,[34]]]],0,0,0,0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],0,[35,[[13,[2]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[36,[[17,[12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[[-1,-2],2,[],[]],[6,38],[6,38],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[4,[39]]],5],[3,2],[3,2],[3,2],[3,2],[3,2],[[36,8],9],[[36,12],[[13,[12]]]],[[40,12,3],[[13,[12]]]],[[-1,12,6],[[4,[12,29]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[36,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[40,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[36,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[40,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[39,6],38],[[15,37,38,6,14,16,20],[[13,[40]]]],[[6,41,38,42],[[13,[37]]]],0,0,0,0,0,0,0,0,0,0,[36,43],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,12],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],2,[],[]],[6,44],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,2],[3,2],[[44,44],6],[[44,8],9],[[45,8],9],[[45,12,3],[[13,[12]]]],[-1,-1,[]],[-1,-1,[]],[[45,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[45,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],0,0,[[],3],[[],3],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[44,15,6,14],[[13,[45]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[[-1,-2],2,[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,2],[3,2],[[46,46],6],[[46,8],9],[[47,8],9],[[47,12],[[13,[12]]]],[-1,-1,[]],[-1,-1,[]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[46,6],[[46,15,6,14],[[13,[47]]]],[[],46],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,15,6,14],[[13,[48]]]],[[15,6,14],[[13,[48]]]],[[3,15,6,14],[[13,[48]]]],[[15,6,14],[[13,[48]]]],[[3,15,6,14],[[13,[48]]]],[[15,6,14],[[13,[48]]]],[[3,15,6,14],[[13,[48]]]],[[15,6,14],[[13,[48]]]],[[3,15,6,14],[[13,[48]]]],[[15,6,14],[[13,[48]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,49],[[-1,-2],2,[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,2],[3,2],[[49,49],6],[[49,8],9],[[50,8],9],[[50,12,3],[[13,[12]]]],[-1,-1,[]],[-1,-1,[]],[49,3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[[49,15,6,14],[[13,[50]]]],[49,3],[49,3],[6,49],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,2],[52,2],[53,53],[[-1,-2],2,[],[]],[[52,12,12],[[13,[12]]]],[[],53],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[4,[53]]],5],[51,42],[52,42],[3,2],[3,2],[3,2],[[52,12],[[13,[12]]]],0,[[53,53],6],[[53,8],9],[[51,8],9],[[52,8],9],[[51,12],[[13,[12]]]],[[52,12,12],[[13,[12]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[15,53,6,14],[[13,[51]]]],[[15,53,6,14],[[13,[52]]]],[[],53],0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[48,48],[[-1,-2],2,[],[]],[3,-1,[]],[3,-1,[]],[3,2],[[48,8],9],[[48,12],[[13,[12]]]],[[-1,12,6],[[4,[12,29]]],[]],[-1,-1,[]],[-1,48,[[55,[12],[[54,[[13,[12]]]]]]]],[[],3],[-1,-2,[],[]],[-1,48,[[55,[12],[[54,[[13,[12]]]]]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[[[56,[-1]],41,42,6],[[4,[[59,[[58,[57]]]],29]]],[[61,[60]]]],[[-1,41,42,6],[[4,[[59,[[58,[57]]]],29]]],[[61,[60]]]],[[-1,41,42,6],[[4,[[59,[[58,[57]]]],29]]],[[61,[60]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,62],[63,63],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[3,3,3,64,15],[[13,[62]]]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,2],[3,2],[3,2],[3,2],[65,12],[[65,8],9],[[66,8],9],[[62,8],9],[[63,8],9],[[65,12],[[13,[12]]]],[[66,12],[[13,[12]]]],[[62,12],[[13,[12]]]],[[63,12],[[13,[12]]]],[[-1,12,6],[[4,[12,29]]],[]],[[-1,12,6],[[4,[12,29]]],[]],[[-1,12,6],[[4,[12,29]]],[]],[[-1,12,6],[[4,[12,29]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[12,[17,[12]],15,6,14],66],[[65,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[66,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[65,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[66,14,15,[17,[16]],[17,[18]],[17,[19]],[17,[20]]],2],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,3,15,6,14],[[13,[66]]]],[[3,3,15,6,14],[[13,[66]]]],[[3,3,15,6,14],[[13,[65]]]],[[3,3,67],[[13,[63]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Config",15],[1,"tuple"],[1,"usize"],[6,"Result",748],[10,"Deserializer",749],[1,"bool"],[5,"BertLinear",15],[5,"Formatter",750],[8,"Result",750],[5,"LayerNorm",15],[5,"BertModel",15],[5,"Tensor",751],[8,"Result",752],[5,"LoraConfig",753],[8,"VarBuilder",754],[5,"LoraLinearConfig",755],[6,"Option",756],[5,"LoraConv1dConfig",757],[5,"LoraConv2dConfig",758],[5,"LoraEmbeddingConfig",759],[1,"f64"],[5,"TypeId",760],[5,"GPTBigCode",86],[5,"Config",86],[5,"VisionConfig",129],[5,"Config",129],[5,"VisionModel",129],[5,"BlipForConditionalGeneration",129],[6,"Error",752],[5,"TextLMHeadModel",210],[5,"Config",210],[5,"TextPooler",210],[5,"DinoVisionTransformer",273],[5,"Falcon",291],[5,"Config",291],[5,"LlamaLinear",344],[5,"Cache",344],[5,"Config",344],[5,"LlamaConfig",344],[5,"Llama",344],[6,"DType",761],[6,"Device",762],[5,"Shape",763],[5,"Config",448],[5,"Mistral",448],[5,"Config",497],[5,"Model",497],[5,"UnsyncFunc",643],[5,"Config",543],[5,"Model",543],[5,"T5EncoderModel",581],[5,"T5ForConditionalGeneration",581],[5,"Config",581],[17,"Output"],[10,"Fn",764],[1,"slice"],[10,"SimpleBackend",754],[5,"Box",765],[5,"VarBuilderArgs",754],[5,"Path",766],[10,"AsRef",767],[5,"TracedLoraConv2d",667],[5,"QMatMul",667],[5,"Conv2dConfig",768],[5,"TracedLoraEmbedding",667],[5,"TracedLoraLinear",667],[5,"VarBuilder",769]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
